include:
  - ps-postgres.yml

services:
  gowebapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: golang-api-todo
    environment:
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: ${SERVER_PORT}
      DATABASE_HOST: postgres
      DATABASE_URL: ${PS_DATA_SOURCE_URI}
      POWERSYNC_URL: http://powersync:${PS_PORT}
      POWERSYNC_PUBLIC_KEY: ${DEMO_JWKS_PUBLIC_KEY}
      POWERSYNC_PRIVATE_KEY: ${DEMO_JWKS_PRIVATE_KEY}
      JWT_ISSUER: powersync-dev
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ./:/app
      - goweb-data:/app/data
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      powersync:
        condition: service_started
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: pg-todo
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d todo_db"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 30s
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data:
  goweb-data:
