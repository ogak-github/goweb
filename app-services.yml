services:
  gowebapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: golang-api-todo
    environment:
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: ${SERVER_PORT}
      DATABASE_HOST: postgres
      DATABASE_URL: ${PS_DATASOURCE_URI}
      POWERSYNC_URL: http://powersync:${PS_PORT}
      POWERSYNC_PUBLIC_KEY: ${DEMO_JWKS_PUBLIC_KEY}
      POWERSYNC_PRIVATE_KEY: ${DEMO_JWKS_PRIVATE_KEY}
      JWT_ISSUER: powersync-dev
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ./:/app
      - goweb-data:/app/data
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      powersync:
        condition: service_started
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: pg-todo
    environment:
      POSTGRES_USER: ${PG_DATABASE_USER}
      POSTGRES_DB: ${PG_DATABASE_NAME}
      POSTGRES_PASSWORD: ${PG_DATABASE_PASSWORD}
      PGPORT: ${PG_DATABASE_PORT}
    ports:
      - "${PG_DATABASE_PORT}:${PG_DATABASE_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_DATABASE_USER} -d ${PG_DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 30s
    networks:
      - app-network
    restart: unless-stopped
  
  postgres-storage:
    image: postgres:15-alpine
    container_name: pg-storage
    environment:
      POSTGRES_USER: ${PG_STORAGE_DATABASE_USER}
      POSTGRES_PASSWORD: ${PG_STORAGE_DATABASE_PASSWORD}
      POSTGRES_DB: ${PG_STORAGE_DATABASE_NAME}
      PGPORT: ${PG_STORAGE_DATABASE_PORT}
    volumes:
      - postgres-storage-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_STORAGE_DATABASE_USER} -d ${PG_STORAGE_DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 30s
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data:
  postgres-storage-data:
  goweb-data:
